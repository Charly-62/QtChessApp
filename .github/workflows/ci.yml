name: CI and Build Workflow

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

concurrency:
  group: deploy-gh-pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Qt and Build Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y qt5-qmake qtbase5-dev make

      - name: Build Project
        run: |
          mkdir -p build
          cd build
          qmake ../schach/schach.pro
          make

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: build/*

  docs:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Doxygen
        run: sudo apt-get install -y doxygen

      - name: Generate Documentation
        run: |
          mkdir -p docs
          cd docs
          doxygen Doxyfile

      - name: Upload Docs Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docs-artifacts
          path: docs/*

  deploy:
    runs-on: ubuntu-latest
    needs: [build, docs]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: build

      - name: Download Docs Artifacts
        uses: actions/download-artifact@v4
        with:
          name: docs-artifacts
          path: docs

      - name: Prepare Deployment Directory
        run: |
          mkdir -p deploy/build
          cp -r build/* deploy/build/
          cp -r docs/html/* deploy/
          touch deploy/.nojekyll

      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/master'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./deploy
          allow_empty_commit: true

  build-binaries:
    needs: deploy
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: '5.15.2'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # Install Dependencies for Linux
      - name: Install Dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libgl1-mesa-dev libx11-dev
        shell: /bin/bash -e {0}
        env:
          PKG_CONFIG_PATH: /Users/runner/work/QtChessApp/Qt/5.15.2/clang_64/lib/pkgconfig
          Qt5_Dir: /Users/runner/work/QtChessApp/Qt/5.15.2/clang_64
          QT_PLUGIN_PATH: /Users/runner/work/QtChessApp/Qt/5.15.2/clang_64/plugins
          QML2_IMPORT_PATH: /Users/runner/work/QtChessApp/Qt/5.15.2/clang_64/qml

      # Install Dependencies for macOS
      - name: Install Dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install pkg-config
          brew install openssl
        shell: /bin/bash -e {0}
        env:
          PKG_CONFIG_PATH: /Users/runner/work/QtChessApp/Qt/5.15.2/clang_64/lib/pkgconfig
          Qt5_Dir: /Users/runner/work/QtChessApp/Qt/5.15.2/clang_64
          QT_PLUGIN_PATH: /Users/runner/work/QtChessApp/Qt/5.15.2/clang_64/plugins
          QML2_IMPORT_PATH: /Users/runner/work/QtChessApp/Qt/5.15.2/clang_64/qml

      # Install Dependencies for Windows
      - name: Install Dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install git -y
          choco install cmake -y
        shell: powershell
        env:
          PKG_CONFIG_PATH: C:\Users\runner\work\QtChessApp\Qt\5.15.2\clang_64\lib\pkgconfig
          Qt5_Dir: C:\Users\runner\work\QtChessApp\Qt\5.15.2\clang_64
          QT_PLUGIN_PATH: C:\Users\runner\work\QtChessApp\Qt\5.15.2\clang_64\plugins
          QML2_IMPORT_PATH: C:\Users\runner\work\QtChessApp\Qt\5.15.2\clang_64\qml

      # Build Project for Linux and macOS
      - name: Build Project (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          mkdir build
          cd build
          qmake ../schach/schach.pro
          make
        shell: /bin/bash -e {0}

      # Build Project for Windows
      - name: Build Project (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          for /f "usebackq tokens=*" %i in (`"%ProgramFiles(x86)%\Microsoft Visual Studio\Installer\vswhere.exe" -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath`) do set InstallDir=%i
          call "%InstallDir%\VC\Auxiliary\Build\vcvars64.bat"
          mkdir build
          cd build
          qmake ../schach/schach.pro
          nmake  # or 'jom' if using

      # Package Build for Linux and macOS
      - name: Package Build (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          cd build
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            zip -r ../QtChessApp_Linux.zip *
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            zip -r ../QtChessApp_macOS.zip *
          fi
        shell: /bin/bash -e {0}

      # Package Build for Windows
      - name: Package Build (Windows)
        if: runner.os == 'Windows'
        run: |
          cd build
          Compress-Archive -Path * -DestinationPath ../QtChessApp_Windows.zip
        shell: powershell

      # Upload Binaries for Linux and macOS
      - name: Upload Binaries (Linux/macOS)
        if: runner.os != 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: QtChessApp-${{ matrix.os }}
          path: |
            QtChessApp_Linux.zip
            QtChessApp_macOS.zip
          retention-days: 30

      # Upload Binaries for Windows
      - name: Upload Binaries (Windows)
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: QtChessApp-Windows
          path: QtChessApp_Windows.zip
          retention-days: 30